# Generated by Django 4.2.1 on 2023-05-27 22:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is staff?')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 31 characters or fewer. Letters, digits and ./_ only.', max_length=31, unique=True, validators=[django.core.validators.RegexValidator(regex='^[\\w](?!.*?\\.{2})[\\w.]{1,29}[\\w]$')], verbose_name='username')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['email'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('given_name', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='given name')),
                ('family_name', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='family name')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='person', related_query_name='person', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'person',
                'verbose_name_plural': 'people',
                'ordering': ['family_name', 'given_name'],
            },
        ),
    ]
